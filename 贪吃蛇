import pygame
import random

# 初始化pygame
pygame.init()

# 定义颜色
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)

# 设置屏幕大小和标题
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
SCREEN = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("贪吃蛇")

# 定义蛇和食物的大小
BLOCK_SIZE = 20

# 定义蛇的速度
SPEED = 20

# 定义蛇的初始位置和方向
snake_pos = [100, 50]
snake_body = [[100, 50], [90, 50], [80, 50]]
direction = 'RIGHT'

# 定义食物的位置
food_pos = [random.randrange(1, (SCREEN_WIDTH // BLOCK_SIZE)) * BLOCK_SIZE,
            random.randrange(1, (SCREEN_HEIGHT // BLOCK_SIZE)) * BLOCK_SIZE]

# 定义分数
score = 0

# 定义字体
font = pygame.font.SysFont(None, 55)

# 定义游戏结束函数
def game_over():
    SCREEN.fill(BLACK)
    game_over_text = font.render("游戏结束!", True, RED)
    game_over_rect = game_over_text.get_rect()
    game_over_rect.midtop = (SCREEN_WIDTH / 2, SCREEN_HEIGHT / 4)
    SCREEN.blit(game_over_text, game_over_rect)
    show_score(0)
    pygame.display.flip()
    pygame.time.wait(5000)
    pygame.quit()

# 定义显示分数函数
def show_score(choice=1):
    score_font = pygame.font.SysFont(None, 40)
    score_text = score_font.render("得分 : " + str(score), True, WHITE)
    score_rect = score_text.get_rect()
    if choice == 1:
        score_rect.midtop = (SCREEN_WIDTH / 10, 15)
    else:
        score_rect.midtop = (SCREEN_WIDTH / 2, SCREEN_HEIGHT / 1.25)
    SCREEN.blit(score_text, score_rect)

# 游戏主循环
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
        
        # 检测按键事件
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_RIGHT:
                direction = 'RIGHT'
            if event.key == pygame.K_LEFT:
                direction = 'LEFT'
            if event.key == pygame.K_UP:
                direction = 'UP'
            if event.key == pygame.K_DOWN:
                direction = 'DOWN'
    
    # 根据方向移动蛇的头部
    if direction == 'RIGHT':
        snake_pos[0] += BLOCK_SIZE
    if direction == 'LEFT':
        snake_pos[0] -= BLOCK_SIZE
    if direction == 'UP':
        snake_pos[1] -= BLOCK_SIZE
    if direction == 'DOWN':
        snake_pos[1] += BLOCK_SIZE
    
    # 增加蛇的长度
    snake_body.insert(0, list(snake_pos))
    
    # 如果蛇吃到了食物
    if snake_pos[0] == food_pos[0] and snake_pos[1] == food_pos[1]:
        score += 1
        food_pos = [random.randrange(1, (SCREEN_WIDTH // BLOCK_SIZE)) * BLOCK_SIZE,
                    random.randrange(1, (SCREEN_HEIGHT // BLOCK_SIZE)) * BLOCK_SIZE]
    else:
        snake_body.pop()
    
    # 更新屏幕
    SCREEN.fill(BLACK)
    for pos in snake_body:
        pygame.draw.rect(SCREEN, GREEN, pygame.Rect(pos[0], pos[1], BLOCK_SIZE, BLOCK_SIZE))
    pygame.draw.rect(SCREEN, BLUE, pygame.Rect(food_pos[0], food_pos[1], BLOCK_SIZE, BLOCK_SIZE))
    
    # 检测游戏结束条件
    if snake_pos[0] < 0 or snake_pos[0] > SCREEN_WIDTH - BLOCK_SIZE or snake_pos[1] < 0 or snake_pos[1] > SCREEN_HEIGHT - BLOCK_SIZE:
        game_over()
    for block in snake_body[1:]:
        if snake_pos[0] == block[0] and snake_pos[1] == block[1]:
            game_over()
    
    show_score()
    pygame.display.flip()
    pygame.time.Clock().tick(SPEED)
